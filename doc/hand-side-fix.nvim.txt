*hand-side-fix.nvim.txt*     For Neovim nightly     Last change: 2024 March 27

==============================================================================
Table of Contents                       *hand-side-fix.nvim-table-of-contents*

1. Abbreviations setup with hand-side-fix.nvim|hand-side-fix.nvim-abbreviations-setup-with-hand-side-fix.nvim|
  - Installation via lazy.nvim|hand-side-fix.nvim-abbreviations-setup-with-hand-side-fix.nvim-installation-via-lazy.nvim|
  - Configuration|hand-side-fix.nvim-abbreviations-setup-with-hand-side-fix.nvim-configuration|
  - Supported Languages|hand-side-fix.nvim-abbreviations-setup-with-hand-side-fix.nvim-supported-languages|
  - Contributing|hand-side-fix.nvim-abbreviations-setup-with-hand-side-fix.nvim-contributing|

==============================================================================
1. Abbreviations setup with hand-side-fix.nvim*hand-side-fix.nvim-abbreviations-setup-with-hand-side-fix.nvim*



This plugin is based on the idea that many typos occur because letters are
typed with different hands. It applies the idea to a small set of keywords.

The algorithm simply checks if two letters in sequence are pressed by different
hands. Based on this list, neovim’s native abbreviation system will be
configured to correct the typo.

Each language-specific abbreviation configuration will be applied once the
defined file extension matches.

For example, in a language that supports the `const` keyword, typing `cosnt`
will correct the typo (in the case of a US keyboard). See the test data
<https://github.com/arminfro/hand-side-fix.nvim/tree/main/tests/hand-side-fix/expectations>
for all abbreviations.

You can also configure your own custom keywords based on file extension.


INSTALLATION VIA LAZY.NVIM*hand-side-fix.nvim-abbreviations-setup-with-hand-side-fix.nvim-installation-via-lazy.nvim*

Requires neovim-nightly.

>lua
    {
      "arminfro/hand-side-fix.nvim",
      event = "BufEnter",
      opts = true,
    },
<


CONFIGURATION*hand-side-fix.nvim-abbreviations-setup-with-hand-side-fix.nvim-configuration*

- `excludes`, defines a global list which will be ignored in abbreviations
    - `"fi"` is just for demonstration, in case of `bash` it’s not needed, keywords are ignored by default
- `custom_keywords`, is a list with file extension(s) and keywords to set specific abbreviation config

>lua
    {
      layout = "us",
      excludes = { "fi" },
      custom_keywords = {
        {
          pattern = "*.md",
          keywords = {
            "the", "of", "and", "to", "in", "is", "was", "that", "for", "as", "with", "by",
            "on", "are", "from", "be", "or", "his", "were", "it", "an", "at", "not", "which",
            "have", "he", "had", "this", "has", "also", "their", "but", "one", "can", "its",
            "on", "the", "other", "been", "more", "they", "used", "first", "all", "two",
          },
        },
      },
    },
<


SUPPORTED LANGUAGES*hand-side-fix.nvim-abbreviations-setup-with-hand-side-fix.nvim-supported-languages*

- Bash
- C/C++
- C#
- Go
- Haskell
- Html
- Java
- Javascript/Typescript
- Kotlin
- Lua
- Php
- Python
- Ruby
- Rust
- Scala
- Swift


CONTRIBUTING*hand-side-fix.nvim-abbreviations-setup-with-hand-side-fix.nvim-contributing*

- provide some <https://github.com/arminfro/hand-side-fix.nvim/blob/main/lua/hand-side-fix/layouts/us.lua> keyboard layout file and I can wire it up
- provide keywords <https://github.com/arminfro/hand-side-fix.nvim/tree/main/lua/hand-side-fix/keywords> list for a programming language not supported yet
- check the keywords <https://github.com/arminfro/hand-side-fix.nvim/tree/main/lua/hand-side-fix/keywords> defined for a programming language and suggest improvements

==============================================================================
2. Links                                            *hand-side-fix.nvim-links*

1. *Lua*: https://img.shields.io/badge/Made%20with%20Lua-blueviolet.svg?style=for-the-badge&logo=lua
2. *GitHub Workflow Status*: https://img.shields.io/github/actions/workflow/status/arminfro/hand-side-fix.nvim/lint-test.yml?branch=main&style=for-the-badge

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
