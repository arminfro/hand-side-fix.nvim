return {
  ["and"] = { "nad", "adn" },
  array = { "arrya" },
  ["break"] = { "breka" },
  callable = { "clalable", "calalble", "callalbe", "callabel" },
  catch = { "cathc" },
  class = { "lcass", "calss" },
  clone = { "lcone", "cloen" },
  const = { "ocnst", "cosnt" },
  continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
  declare = { "delcare", "decalre" },
  default = { "defualt", "defautl" },
  die = { "ide", "dei" },
  ["do"] = { "od" },
  echo = { "ehco" },
  ["else"] = { "lese", "esle" },
  ["elseif"] = { "leseif", "esleif", "elsief", "elsefi" },
  empty = { "mepty", "emtpy", "empyt" },
  enddeclare = { "neddeclare", "edndeclare", "enddelcare", "enddecalre" },
  endfor = { "nedfor", "ednfor", "endofr", "endfro" },
  endforeach = { "nedforeach", "ednforeach", "endofreach", "endfroeach", "endforeahc" },
  endif = { "nedif", "ednif", "enidf", "endfi" },
  endswitch = { "nedswitch", "ednswitch", "endsiwtch", "endswtich", "endswithc" },
  endwhile = { "nedwhile", "ednwhile", "endhwile", "endwhiel" },
  eval = { "evla" },
  exit = { "eixt", "exti" },
  extends = { "extneds", "extedns" },
  final = { "ifnal", "fianl", "finla" },
  finally = { "ifnally", "fianlly", "finlaly" },
  ["for"] = { "ofr", "fro" },
  foreach = { "ofreach", "froeach", "foreahc" },
  ["function"] = { "ufnction", "fucntion", "funciton" },
  global = { "lgobal", "glboal", "globla" },
  ["goto"] = { "ogto", "gtoo", "goot" },
  ["if"] = { "fi" },
  implements = { "impelments", "implmeents", "impleemnts", "implemnets", "implemetns" },
  include = { "icnlude", "inlcude", "incldue" },
  include_once = { "icnlude_once", "inlcude_once", "incldue_once", "include_ocne" },
  instanceof = { "isntanceof", "instnaceof", "instacneof", "instancoef", "instancefo" },
  insteadof = { "isnteadof", "insteaodf", "insteadfo" },
  interface = { "itnerface" },
  isset = { "siset" },
  list = { "lsit" },
  namespace = { "anmespace", "nmaespace", "naemspace", "namepsace", "namesapce" },
  new = { "enw" },
  ["or"] = { "ro" },
  print = { "rpint", "pirnt", "pritn" },
  private = { "rpivate", "pirvate", "prviate" },
  protected = { "rpotected", "portected", "prtoected" },
  public = { "pbulic", "pulbic", "publci" },
  require = { "reuqire", "requrie" },
  require_once = { "reuqire_once", "requrie_once", "require_ocne" },
  ["return"] = { "reutrn", "retrun", "retunr" },
  static = { "staitc", "statci" },
  switch = { "siwtch", "swtich", "swithc" },
  throw = { "htrow", "trhow", "thorw", "thrwo" },
  trait = { "triat", "trati" },
  try = { "tyr" },
  unset = { "usnet" },
  use = { "sue" },
  ["while"] = { "hwile", "whiel" },
  xor = { "oxr", "xro" },
  yield = { "yeild", "yiled", "yiedl" },
}
