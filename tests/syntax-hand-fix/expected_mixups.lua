return {
  us = {
    lua = {
      ["and"] = { "nad", "adn" },
      ["break"] = { "breka" },
      ["do"] = { "od" },
      ["else"] = { "lese", "esle" },
      ["elseif"] = { "leseif", "esleif", "elsief", "elsefi" },
      ["end"] = { "ned", "edn" },
      ["false"] = { "flase", "fasle" },
      ["for"] = { "ofr", "fro" },
      ["function"] = { "ufnction", "fucntion", "funciton" },
      ["if"] = { "fi" },
      ["local"] = { "lcoal", "locla" },
      ["not"] = { "nto" },
      ["or"] = { "ro" },
      ["repeat"] = { "rpeeat", "reepat" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      ["then"] = { "hten", "tehn", "thne" },
      ["true"] = { "ture", "treu" },
      ["until"] = { "utnil", "unitl" },
      ["while"] = { "hwile", "whiel" },
    },
    rust = {
      Self = { "Slef", "Sefl" },
      ["break"] = { "breka" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      ["else"] = { "lese", "esle" },
      enum = { "neum" },
      extern = { "extenr" },
      ["false"] = { "flase", "fasle" },
      fn = { "nf" },
      ["for"] = { "ofr", "fro" },
      ["if"] = { "fi" },
      let = { "elt" },
      match = { "amtch", "mathc" },
      mod = { "mdo" },
      move = { "mvoe" },
      mut = { "mtu" },
      pub = { "pbu" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      self = { "slef", "sefl" },
      static = { "staitc", "statci" },
      struct = { "sturct", "strcut" },
      super = { "usper", "suepr" },
      trait = { "triat", "trati" },
      ["true"] = { "ture", "treu" },
      type = { "ytpe", "tyep" },
      unsafe = { "usnafe" },
      use = { "sue" },
      where = { "hwere", "wehre" },
      ["while"] = { "hwile", "whiel" },
    },
    typescript = {
      any = { "nay" },
      arguments = { "arugments", "arguemnts", "argumnets", "argumetns" },
      await = { "awiat", "awati" },
      bigint = { "ibgint", "bgiint", "biignt", "bigitn" },
      boolean = { "obolean", "booelan", "boolena" },
      ["break"] = { "breka" },
      catch = { "cathc" },
      class = { "lcass", "calss" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      debugger = { "deubgger", "debguger" },
      declare = { "delcare", "decalre" },
      delete = { "dleete", "deelte" },
      ["else"] = { "lese", "esle" },
      export = { "epxort", "exprot" },
      extends = { "extneds", "extedns" },
      ["false"] = { "flase", "fasle" },
      ["for"] = { "ofr", "fro" },
      ["function"] = { "ufnction", "fucntion", "funciton" },
      ["if"] = { "fi" },
      implements = { "impelments", "implmeents", "impleemnts", "implemnets", "implemetns" },
      import = { "improt" },
      instanceof = { "isntanceof", "instnaceof", "instacneof", "instancoef", "instancefo" },
      interface = { "itnerface" },
      keyof = { "ekyof", "kyeof", "keyfo" },
      let = { "elt" },
      module = { "mdoule", "moudle", "moduel" },
      namespace = { "anmespace", "nmaespace", "naemspace", "namepsace", "namesapce" },
      never = { "enver" },
      new = { "enw" },
      number = { "nubmer" },
      object = { "boject", "ojbect", "obejct" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      public = { "pbulic", "pulbic", "publci" },
      readonly = { "reaodnly" },
      require = { "reuqire", "requrie" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      static = { "staitc", "statci" },
      string = { "stirng", "strign" },
      super = { "usper", "suepr" },
      switch = { "siwtch", "swtich", "swithc" },
      symbol = { "ysmbol", "sybmol", "symobl" },
      this = { "htis", "thsi" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      ["true"] = { "ture", "treu" },
      try = { "tyr" },
      type = { "ytpe", "tyep" },
      typeof = { "ytpeof", "tyepof", "typoef", "typefo" },
      undefined = { "udnefined", "undeifned", "undefiend" },
      unique = { "unqiue", "uniuqe", "uniqeu" },
      unknown = { "unknwon", "unknonw" },
      void = { "ovid", "vodi" },
      ["while"] = { "hwile", "whiel" },
      yield = { "yeild", "yiled", "yiedl" },
    },
    javascript = {
      arguments = { "arugments", "arguemnts", "argumnets", "argumetns" },
      await = { "awiat", "awati" },
      ["break"] = { "breka" },
      catch = { "cathc" },
      class = { "lcass", "calss" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      debugger = { "deubgger", "debguger" },
      delete = { "dleete", "deelte" },
      ["else"] = { "lese", "esle" },
      export = { "epxort", "exprot" },
      extends = { "extneds", "extedns" },
      ["false"] = { "flase", "fasle" },
      ["for"] = { "ofr", "fro" },
      ["function"] = { "ufnction", "fucntion", "funciton" },
      ["if"] = { "fi" },
      import = { "improt" },
      instanceof = { "isntanceof", "instnaceof", "instacneof", "instancoef", "instancefo" },
      let = { "elt" },
      new = { "enw" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      public = { "pbulic", "pulbic", "publci" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      static = { "staitc", "statci" },
      super = { "usper", "suepr" },
      switch = { "siwtch", "swtich", "swithc" },
      this = { "htis", "thsi" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      ["true"] = { "ture", "treu" },
      try = { "tyr" },
      typeof = { "ytpeof", "tyepof", "typoef", "typefo" },
      undefined = { "udnefined", "undeifned", "undefiend" },
      ["while"] = { "hwile", "whiel" },
      yield = { "yeild", "yiled", "yiedl" },
    },
    csharp = {
      alias = { "laias", "alais" },
      ascending = { "ascneding", "ascedning", "ascenidng", "ascendign" },
      async = { "aysnc", "asycn" },
      await = { "awiat", "awati" },
      by = { "yb" },
      descending = { "descneding", "descedning", "descenidng", "descendign" },
      dynamic = { "ydnamic", "dyanmic", "dynmaic", "dynamci" },
      equals = { "euqals", "eqauls", "equlas", "equasl" },
      from = { "form" },
      global = { "lgobal", "glboal", "globla" },
      group = { "gorup" },
      into = { "itno", "inot" },
      let = { "elt" },
      nameof = { "anmeof", "nmaeof", "naemof", "namoef", "namefo" },
      orderby = { "roderby", "orderyb" },
      partial = { "aprtial", "parital", "partail", "partila" },
      remove = { "rmeove", "remvoe" },
      select = { "sleect", "seelct" },
      value = { "vlaue", "valeu" },
      when = { "hwen", "wehn", "whne" },
      where = { "hwere", "wehre" },
      yield = { "yeild", "yiled", "yiedl" },
    },
    go = {
      ["break"] = { "breka" },
      chan = { "hcan", "cahn", "chna" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      default = { "defualt", "defautl" },
      ["else"] = { "lese", "esle" },
      fallthrough = {
        "flalthrough",
        "faltlhrough",
        "fallhtrough",
        "falltrhough",
        "fallthorugh",
        "fallthroguh",
        "fallthrouhg",
      },
      ["for"] = { "ofr", "fro" },
      func = { "ufnc", "fucn" },
      go = { "og" },
      ["goto"] = { "ogto", "gtoo", "goot" },
      ["if"] = { "fi" },
      import = { "improt" },
      interface = { "itnerface" },
      map = { "amp", "mpa" },
      package = { "apckage", "pakcage", "pacakge" },
      range = { "rnage", "ragne" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      select = { "sleect", "seelct" },
      struct = { "sturct", "strcut" },
      switch = { "siwtch", "swtich", "swithc" },
      type = { "ytpe", "tyep" },
    },
    haskell = {
      class = { "lcass", "calss" },
      deriving = { "deirving", "derviing", "deriivng", "derivign" },
      ["do"] = { "od" },
      ["else"] = { "lese", "esle" },
      ["if"] = { "fi" },
      import = { "improt" },
      infix = { "ifnix", "inifx", "infxi" },
      infixl = { "ifnixl", "inifxl", "infxil", "infilx" },
      infixr = { "ifnixr", "inifxr", "infxir" },
      instance = { "isntance", "instnace", "instacne" },
      let = { "elt" },
      module = { "mdoule", "moudle", "moduel" },
      newtype = { "enwtype", "newytpe", "newtyep" },
      of = { "fo" },
      ["then"] = { "hten", "tehn", "thne" },
      type = { "ytpe", "tyep" },
      where = { "hwere", "wehre" },
    },
    html = {
      article = { "aritcle", "artcile", "artilce", "articel" },
      aside = { "aisde", "asdie" },
      audio = { "uadio", "aduio", "auido" },
      bdi = { "bid" },
      bdo = { "bod" },
      blockquote = { "lbockquote", "blcokquote", "blokcquote", "blocqkuote", "blockuqote", "blockqutoe" },
      body = { "obdy", "bdoy", "boyd" },
      button = { "ubtton", "btuton", "butotn" },
      canvas = { "cnavas", "cavnas" },
      caption = { "cpation", "catpion", "capiton" },
      cite = { "icte", "ctie" },
      code = { "ocde", "cdoe" },
      col = { "ocl" },
      colgroup = { "oclgroup", "coglroup", "colgorup" },
      datalist = { "datlaist", "datalsit" },
      del = { "dle" },
      details = { "detials", "detaisl" },
      dfn = { "dnf" },
      dialog = { "idalog", "dailog", "dilaog", "dialgo" },
      div = { "idv", "dvi" },
      dl = { "ld" },
      em = { "me" },
      embed = { "mebed", "ebmed" },
      fieldset = { "ifeldset", "feildset", "filedset", "fiedlset" },
      figcaption = { "ifgcaption", "fgicaption", "figcpation", "figcatpion", "figcapiton" },
      figure = { "ifgure", "fgiure", "fiugre", "figrue" },
      footer = { "ofoter", "fotoer" },
      form = { "ofrm", "from", "fomr" },
      head = { "ehad" },
      header = { "ehader" },
      hgroup = { "ghroup", "hgorup" },
      hr = { "rh" },
      html = { "thml", "hmtl" },
      iframe = { "firame", "ifrmae", "ifraem" },
      img = { "igm" },
      input = { "inptu" },
      ins = { "isn" },
      kbd = { "bkd" },
      keygen = { "ekygen", "kyegen", "kegyen", "keygne" },
      label = { "albel", "lable" },
      legend = { "elgend", "legned", "legedn" },
      main = { "amin", "mian" },
      map = { "amp", "mpa" },
      mark = { "amrk", "makr" },
      menu = { "emnu", "mneu" },
      menuitem = { "emnuitem", "mneuitem", "menutiem", "menuitme" },
      meta = { "emta" },
      meter = { "emter" },
      nav = { "anv" },
      noscript = { "nsocript", "noscirpt", "noscritp" },
      object = { "boject", "ojbect", "obejct" },
      optgroup = { "otpgroup", "optgorup" },
      option = { "otpion", "opiton" },
      output = { "otuput", "ouptut", "outptu" },
      param = { "apram", "parma" },
      picture = { "pciture", "picutre", "pictrue" },
      pre = { "rpe" },
      progress = { "rpogress", "porgress", "prgoress" },
      rp = { "pr" },
      ruby = { "urby", "rbuy", "ruyb" },
      samp = { "smap" },
      script = { "scirpt", "scritp" },
      section = { "seciton" },
      select = { "sleect", "seelct" },
      small = { "msall", "samll", "smlal" },
      source = { "osurce", "soruce" },
      span = { "psan", "sapn", "spna" },
      strong = { "storng", "strogn" },
      style = { "sytle", "styel" },
      sub = { "usb", "sbu" },
      summary = { "usmmary", "sumamry", "summayr" },
      sup = { "usp" },
      table = { "talbe", "tabel" },
      tbody = { "tobdy", "tbdoy", "tboyd" },
      template = { "tmeplate", "tempalte" },
      tfoot = { "tofot", "tfoto" },
      th = { "ht" },
      thead = { "htead", "tehad" },
      time = { "itme", "tiem" },
      title = { "ittle", "ttile", "tilte", "titel" },
      track = { "trakc" },
      video = { "ivdeo", "vdieo", "vidoe" },
    },
    java = {
      boolean = { "obolean", "booelan", "boolena" },
      ["break"] = { "breka" },
      byte = { "ybte", "btye" },
      catch = { "cathc" },
      char = { "hcar", "cahr" },
      class = { "lcass", "calss" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      default = { "defualt", "defautl" },
      ["do"] = { "od" },
      double = { "oduble", "dobule", "doulbe", "doubel" },
      ["else"] = { "lese", "esle" },
      enum = { "neum" },
      extends = { "extneds", "extedns" },
      final = { "ifnal", "fianl", "finla" },
      finally = { "ifnally", "fianlly", "finlaly" },
      float = { "lfoat", "flaot" },
      ["for"] = { "ofr", "fro" },
      ["goto"] = { "ogto", "gtoo", "goot" },
      ["if"] = { "fi" },
      implements = { "impelments", "implmeents", "impleemnts", "implemnets", "implemetns" },
      import = { "improt" },
      instanceof = { "isntanceof", "instnaceof", "instacneof", "instancoef", "instancefo" },
      int = { "itn" },
      interface = { "itnerface" },
      long = { "logn" },
      native = { "antive", "naitve", "natvie" },
      new = { "enw" },
      package = { "apckage", "pakcage", "pacakge" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      public = { "pbulic", "pulbic", "publci" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      short = { "hsort", "shrot" },
      static = { "staitc", "statci" },
      strictfp = { "stirctfp", "strcitfp", "strictpf" },
      super = { "usper", "suepr" },
      switch = { "siwtch", "swtich", "swithc" },
      synchronized = { "ysnchronized", "sycnhronized", "synhcronized", "syncrhonized", "synchornized", "synchronzied" },
      this = { "htis", "thsi" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      throws = { "htrows", "trhows", "thorws", "thrwos" },
      transient = { "trnasient", "trasnient", "tranisent", "transeint", "transinet", "transietn" },
      try = { "tyr" },
      void = { "ovid", "vodi" },
      volatile = { "ovlatile", "voaltile", "volaitle", "volatiel" },
      ["while"] = { "hwile", "whiel" },
    },
    python = {
      False = { "Flase", "Fasle" },
      None = { "Noen" },
      True = { "Ture", "Treu" },
      ["and"] = { "nad", "adn" },
      async = { "aysnc", "asycn" },
      await = { "awiat", "awati" },
      ["break"] = { "breka" },
      class = { "lcass", "calss" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      del = { "dle" },
      elif = { "leif", "elfi" },
      ["else"] = { "lese", "esle" },
      except = { "excpet", "excetp" },
      finally = { "ifnally", "fianlly", "finlaly" },
      ["for"] = { "ofr", "fro" },
      from = { "form" },
      global = { "lgobal", "glboal", "globla" },
      ["if"] = { "fi" },
      import = { "improt" },
      is = { "si" },
      lambda = { "almbda", "lmabda", "labmda" },
      nonlocal = { "nonlcoal", "nonlocla" },
      ["not"] = { "nto" },
      ["or"] = { "ro" },
      pass = { "apss" },
      raise = { "riase", "rasie" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      try = { "tyr" },
      ["while"] = { "hwile", "whiel" },
      with = { "iwth", "wtih", "wiht" },
      yield = { "yeild", "yiled", "yiedl" },
    },
    ruby = {
      alias = { "laias", "alais" },
      ["and"] = { "nad", "adn" },
      begin = { "beign" },
      ["break"] = { "breka" },
      class = { "lcass", "calss" },
      defined = { "deifned", "defiend" },
      ["do"] = { "od" },
      ["else"] = { "lese", "esle" },
      elsif = { "lesif", "eslif", "elisf", "elsfi" },
      ["end"] = { "ned", "edn" },
      ensure = { "nesure", "esnure", "enusre", "ensrue" },
      ["false"] = { "flase", "fasle" },
      ["for"] = { "ofr", "fro" },
      ["if"] = { "fi" },
      module = { "mdoule", "moudle", "moduel" },
      next = { "enxt" },
      ["not"] = { "nto" },
      ["or"] = { "ro" },
      redo = { "reod" },
      rescue = { "resuce", "resceu" },
      retry = { "retyr" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      self = { "slef", "sefl" },
      super = { "usper", "suepr" },
      ["then"] = { "hten", "tehn", "thne" },
      ["true"] = { "ture", "treu" },
      undef = { "udnef" },
      unless = { "unelss" },
      ["until"] = { "utnil", "unitl" },
      when = { "hwen", "wehn", "whne" },
      ["while"] = { "hwile", "whiel" },
      yield = { "yeild", "yiled", "yiedl" },
    },
    c = {
      auto = { "uato", "atuo", "auot" },
      ["break"] = { "breka" },
      char = { "hcar", "cahr" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      default = { "defualt", "defautl" },
      ["do"] = { "od" },
      double = { "oduble", "dobule", "doulbe", "doubel" },
      ["else"] = { "lese", "esle" },
      enum = { "neum" },
      extern = { "extenr" },
      float = { "lfoat", "flaot" },
      ["for"] = { "ofr", "fro" },
      ["goto"] = { "ogto", "gtoo", "goot" },
      ["if"] = { "fi" },
      int = { "itn" },
      long = { "logn" },
      register = { "reigster", "regsiter" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      short = { "hsort", "shrot" },
      signed = { "isgned", "sgined", "singed", "sigend" },
      sizeof = { "iszeof", "szieof", "sizoef", "sizefo" },
      static = { "staitc", "statci" },
      struct = { "sturct", "strcut" },
      switch = { "siwtch", "swtich", "swithc" },
      typedef = { "ytpedef", "tyepdef" },
      unsigned = { "usnigned", "unisgned", "unsgined", "unsinged", "unsigend" },
      void = { "ovid", "vodi" },
      volatile = { "ovlatile", "voaltile", "volaitle", "volatiel" },
      ["while"] = { "hwile", "whiel" },
    },
    cpp = {
      alignas = { "laignas", "alginas", "alingas", "aligans" },
      alignof = { "laignof", "alginof", "alingof", "alignfo" },
      ["and"] = { "nad", "adn" },
      and_eq = { "nad_eq", "adn_eq" },
      asm = { "ams" },
      atomic_cancel = { "aotmic_cancel", "atomci_cancel", "atomic_cnacel", "atomic_cacnel", "atomic_cancle" },
      atomic_commit = { "aotmic_commit", "atomci_commit", "atomic_ocmmit", "atomic_commti" },
      atomic_noexcept = {
        "aotmic_noexcept",
        "atomci_noexcept",
        "atomic_neoxcept",
        "atomic_noexcpet",
        "atomic_noexcetp",
      },
      auto = { "uato", "atuo", "auot" },
      bitand = { "ibtand", "btiand", "bitnad", "bitadn" },
      bitor = { "ibtor", "btior", "biotr", "bitro" },
      bool = { "obol" },
      ["break"] = { "breka" },
      catch = { "cathc" },
      char = { "hcar", "cahr" },
      char16_t = { "hcar16_t", "cahr16_t" },
      char32_t = { "hcar32_t", "cahr32_t" },
      char8_t = { "hcar8_t", "cahr8_t" },
      class = { "lcass", "calss" },
      co_await = { "oc_await", "co_awiat", "co_awati" },
      co_return = { "oc_return", "co_reutrn", "co_retrun", "co_retunr" },
      co_yield = { "oc_yield", "co_yeild", "co_yiled", "co_yiedl" },
      compl = { "ocmpl" },
      concept = { "ocncept", "cocnept", "concpet", "concetp" },
      const = { "ocnst", "cosnt" },
      const_cast = { "ocnst_cast", "cosnt_cast" },
      consteval = { "ocnsteval", "cosnteval", "constevla" },
      constexpr = { "ocnstexpr", "cosntexpr", "constepxr", "constexrp" },
      constinit = { "ocnstinit", "cosntinit", "consitnit", "constinti" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      decltype = { "delctype", "dectlype", "declytpe", "decltyep" },
      default = { "defualt", "defautl" },
      delete = { "dleete", "deelte" },
      ["do"] = { "od" },
      double = { "oduble", "dobule", "doulbe", "doubel" },
      dynamic_cast = { "ydnamic_cast", "dyanmic_cast", "dynmaic_cast", "dynamci_cast" },
      ["else"] = { "lese", "esle" },
      enum = { "neum" },
      explicit = { "epxlicit", "explciit", "expliict", "explicti" },
      export = { "epxort", "exprot" },
      extern = { "extenr" },
      ["false"] = { "flase", "fasle" },
      float = { "lfoat", "flaot" },
      ["for"] = { "ofr", "fro" },
      friend = { "firend", "freind", "frined", "friedn" },
      ["goto"] = { "ogto", "gtoo", "goot" },
      ["if"] = { "fi" },
      inline = { "inlien" },
      int = { "itn" },
      long = { "logn" },
      mutable = { "mtuable", "mutalbe", "mutabel" },
      namespace = { "anmespace", "nmaespace", "naemspace", "namepsace", "namesapce" },
      new = { "enw" },
      noexcept = { "neoxcept", "noexcpet", "noexcetp" },
      ["not"] = { "nto" },
      not_eq = { "nto_eq" },
      nullptr = { "nulltpr" },
      operator = { "oeprator", "operaotr", "operatro" },
      ["or"] = { "ro" },
      or_eq = { "ro_eq" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      public = { "pbulic", "pulbic", "publci" },
      register = { "reigster", "regsiter" },
      reinterpret_cast = { "rienterpret_cast", "reitnerpret_cast", "reinteprret_cast", "reinterrpet_cast" },
      requires = { "reuqires", "requries" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      short = { "hsort", "shrot" },
      signed = { "isgned", "sgined", "singed", "sigend" },
      sizeof = { "iszeof", "szieof", "sizoef", "sizefo" },
      static = { "staitc", "statci" },
      static_assert = { "staitc_assert", "statci_assert" },
      static_cast = { "staitc_cast", "statci_cast" },
      struct = { "sturct", "strcut" },
      switch = { "siwtch", "swtich", "swithc" },
      synchronized = { "ysnchronized", "sycnhronized", "synhcronized", "syncrhonized", "synchornized", "synchronzied" },
      template = { "tmeplate", "tempalte" },
      this = { "htis", "thsi" },
      thread_local = { "htread_local", "trhead_local", "thread_lcoal", "thread_locla" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      ["true"] = { "ture", "treu" },
      try = { "tyr" },
      typedef = { "ytpedef", "tyepdef" },
      typeid = { "ytpeid", "tyepid", "typied", "typedi" },
      typename = { "ytpename", "tyepname", "typneame", "typeanme", "typenmae", "typenaem" },
      unsigned = { "usnigned", "unisgned", "unsgined", "unsinged", "unsigend" },
      using = { "suing", "uisng", "usign" },
      virtual = { "ivrtual", "vritual", "virutal", "virtaul", "virtula" },
      void = { "ovid", "vodi" },
      volatile = { "ovlatile", "voaltile", "volaitle", "volatiel" },
      wchar_t = { "whcar_t", "wcahr_t" },
      ["while"] = { "hwile", "whiel" },
      xor = { "oxr", "xro" },
      xor_eq = { "oxr_eq", "xro_eq" },
    },
    kotlin = {
      ["break"] = { "breka" },
      by = { "yb" },
      catch = { "cathc" },
      class = { "lcass", "calss" },
      constructor = { "ocnstructor", "cosntructor", "consturctor", "constrcutor", "construcotr", "constructro" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      delegate = { "dleegate", "deelgate" },
      ["do"] = { "od" },
      dynamic = { "ydnamic", "dyanmic", "dynmaic", "dynamci" },
      ["else"] = { "lese", "esle" },
      ["false"] = { "flase", "fasle" },
      field = { "ifeld", "feild", "filed", "fiedl" },
      file = { "ifle", "fiel" },
      finally = { "ifnally", "fianlly", "finlaly" },
      ["for"] = { "ofr", "fro" },
      fun = { "ufn" },
      ["if"] = { "fi" },
      import = { "improt" },
      init = { "inti" },
      interface = { "itnerface" },
      is = { "si" },
      object = { "boject", "ojbect", "obejct" },
      package = { "apckage", "pakcage", "pacakge" },
      param = { "apram", "parma" },
      property = { "rpoperty", "porperty", "proeprty", "properyt" },
      receiver = { "reciever", "recevier" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      setparam = { "septaram", "setapram", "setparma" },
      super = { "usper", "suepr" },
      this = { "htis", "thsi" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      ["true"] = { "ture", "treu" },
      try = { "tyr" },
      typealias = { "ytpealias", "tyepalias", "typelaias", "typealais" },
      val = { "vla" },
      when = { "hwen", "wehn", "whne" },
      where = { "hwere", "wehre" },
      ["while"] = { "hwile", "whiel" },
    },
    php = {
      ["and"] = { "nad", "adn" },
      array = { "arrya" },
      ["break"] = { "breka" },
      callable = { "clalable", "calalble", "callalbe", "callabel" },
      catch = { "cathc" },
      class = { "lcass", "calss" },
      clone = { "lcone", "cloen" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      declare = { "delcare", "decalre" },
      default = { "defualt", "defautl" },
      die = { "ide", "dei" },
      ["do"] = { "od" },
      echo = { "ehco" },
      ["else"] = { "lese", "esle" },
      ["elseif"] = { "leseif", "esleif", "elsief", "elsefi" },
      empty = { "mepty", "emtpy", "empyt" },
      enddeclare = { "neddeclare", "edndeclare", "enddelcare", "enddecalre" },
      endfor = { "nedfor", "ednfor", "endofr", "endfro" },
      endforeach = { "nedforeach", "ednforeach", "endofreach", "endfroeach", "endforeahc" },
      endif = { "nedif", "ednif", "enidf", "endfi" },
      endswitch = { "nedswitch", "ednswitch", "endsiwtch", "endswtich", "endswithc" },
      endwhile = { "nedwhile", "ednwhile", "endhwile", "endwhiel" },
      eval = { "evla" },
      exit = { "eixt", "exti" },
      extends = { "extneds", "extedns" },
      final = { "ifnal", "fianl", "finla" },
      finally = { "ifnally", "fianlly", "finlaly" },
      ["for"] = { "ofr", "fro" },
      foreach = { "ofreach", "froeach", "foreahc" },
      ["function"] = { "ufnction", "fucntion", "funciton" },
      global = { "lgobal", "glboal", "globla" },
      ["goto"] = { "ogto", "gtoo", "goot" },
      ["if"] = { "fi" },
      implements = { "impelments", "implmeents", "impleemnts", "implemnets", "implemetns" },
      include = { "icnlude", "inlcude", "incldue" },
      include_once = { "icnlude_once", "inlcude_once", "incldue_once", "include_ocne" },
      instanceof = { "isntanceof", "instnaceof", "instacneof", "instancoef", "instancefo" },
      insteadof = { "isnteadof", "insteaodf", "insteadfo" },
      interface = { "itnerface" },
      isset = { "siset" },
      list = { "lsit" },
      namespace = { "anmespace", "nmaespace", "naemspace", "namepsace", "namesapce" },
      new = { "enw" },
      ["or"] = { "ro" },
      print = { "rpint", "pirnt", "pritn" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      public = { "pbulic", "pulbic", "publci" },
      require = { "reuqire", "requrie" },
      require_once = { "reuqire_once", "requrie_once", "require_ocne" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      static = { "staitc", "statci" },
      switch = { "siwtch", "swtich", "swithc" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      trait = { "triat", "trati" },
      try = { "tyr" },
      unset = { "usnet" },
      use = { "sue" },
      ["while"] = { "hwile", "whiel" },
      xor = { "oxr", "xro" },
      yield = { "yeild", "yiled", "yiedl" },
    },
    scala = {
      catch = { "cathc" },
      class = { "lcass", "calss" },
      ["do"] = { "od" },
      ["else"] = { "lese", "esle" },
      extends = { "extneds", "extedns" },
      ["false"] = { "flase", "fasle" },
      final = { "ifnal", "fianl", "finla" },
      finally = { "ifnally", "fianlly", "finlaly" },
      ["for"] = { "ofr", "fro" },
      forSome = { "ofrSome", "froSome", "forSoem" },
      ["if"] = { "fi" },
      implicit = { "implciit", "impliict", "implicti" },
      import = { "improt" },
      lazy = { "alzy", "layz" },
      match = { "amtch", "mathc" },
      new = { "enw" },
      object = { "boject", "ojbect", "obejct" },
      override = { "voerride", "overirde", "overrdie" },
      package = { "apckage", "pakcage", "pacakge" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      sealed = { "selaed", "seaeld" },
      super = { "usper", "suepr" },
      this = { "htis", "thsi" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      trait = { "triat", "trati" },
      ["true"] = { "ture", "treu" },
      try = { "tyr" },
      type = { "ytpe", "tyep" },
      val = { "vla" },
      ["while"] = { "hwile", "whiel" },
      with = { "iwth", "wtih", "wiht" },
      yield = { "yeild", "yiled", "yiedl" },
    },
    swift = {
      Self = { "Slef", "Sefl" },
      associatedtype = {
        "asosciatedtype",
        "asscoiatedtype",
        "assoicatedtype",
        "assocaitedtype",
        "associatedytpe",
        "associatedtyep",
      },
      ["break"] = { "breka" },
      catch = { "cathc" },
      class = { "lcass", "calss" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      default = { "defualt", "defautl" },
      deinit = { "dienit", "deinti" },
      ["do"] = { "od" },
      ["else"] = { "lese", "esle" },
      enum = { "neum" },
      extension = { "extnesion", "extesnion", "extenison" },
      fallthrough = {
        "flalthrough",
        "faltlhrough",
        "fallhtrough",
        "falltrhough",
        "fallthorugh",
        "fallthroguh",
        "fallthrouhg",
      },
      ["false"] = { "flase", "fasle" },
      fileprivate = { "ifleprivate", "fielprivate", "filperivate", "filerpivate", "filepirvate", "fileprviate" },
      ["for"] = { "ofr", "fro" },
      func = { "ufnc", "fucn" },
      guard = { "ugard", "gaurd" },
      ["if"] = { "fi" },
      import = { "improt" },
      init = { "inti" },
      inout = { "inotu" },
      internal = { "itnernal", "intenral", "interanl", "internla" },
      is = { "si" },
      let = { "elt" },
      open = { "oepn", "opne" },
      operator = { "oeprator", "operaotr", "operatro" },
      private = { "rpivate", "pirvate", "prviate" },
      protocol = { "rpotocol", "portocol", "prtoocol", "prootcol", "protcool", "protoocl" },
      public = { "pbulic", "pulbic", "publci" },
      ["repeat"] = { "rpeeat", "reepat" },
      rethrows = { "rehtrows", "retrhows", "rethorws", "rethrwos" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      self = { "slef", "sefl" },
      static = { "staitc", "statci" },
      struct = { "sturct", "strcut" },
      subscript = { "usbscript", "sbuscript", "subscirpt", "subscritp" },
      super = { "usper", "suepr" },
      switch = { "siwtch", "swtich", "swithc" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      throws = { "htrows", "trhows", "thorws", "thrwos" },
      ["true"] = { "ture", "treu" },
      try = { "tyr" },
      typealias = { "ytpealias", "tyepalias", "typelaias", "typealais" },
      where = { "hwere", "wehre" },
      ["while"] = { "hwile", "whiel" },
    },
  },
  de = {
    lua = {
      ["and"] = { "nad", "adn" },
      ["break"] = { "breka" },
      ["do"] = { "od" },
      ["else"] = { "lese", "esle" },
      ["elseif"] = { "leseif", "esleif", "elsief", "elsefi" },
      ["end"] = { "ned", "edn" },
      ["false"] = { "flase", "fasle" },
      ["for"] = { "ofr", "fro" },
      ["function"] = { "ufnction", "fucntion", "funciton" },
      ["if"] = { "fi" },
      ["local"] = { "lcoal", "locla" },
      ["not"] = { "nto" },
      ["or"] = { "ro" },
      ["repeat"] = { "rpeeat", "reepat" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      ["then"] = { "hten", "tehn", "thne" },
      ["true"] = { "ture", "treu" },
      ["until"] = { "utnil", "unitl" },
      ["while"] = { "hwile", "whiel" },
    },
    go = {
      ["break"] = { "breka" },
      chan = { "hcan", "cahn", "chna" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      default = { "defualt", "defautl" },
      ["else"] = { "lese", "esle" },
      fallthrough = {
        "flalthrough",
        "faltlhrough",
        "fallhtrough",
        "falltrhough",
        "fallthorugh",
        "fallthroguh",
        "fallthrouhg",
      },
      ["for"] = { "ofr", "fro" },
      func = { "ufnc", "fucn" },
      go = { "og" },
      ["goto"] = { "ogto", "gtoo", "goot" },
      ["if"] = { "fi" },
      import = { "improt" },
      interface = { "itnerface" },
      map = { "amp", "mpa" },
      package = { "apckage", "pakcage", "pacakge" },
      range = { "rnage", "ragne" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      select = { "sleect", "seelct" },
      struct = { "sturct", "strcut" },
      switch = { "siwtch", "swtich", "swithc" },
      type = { "tpye", "tyep" },
    },
    ruby = {
      alias = { "laias", "alais" },
      ["and"] = { "nad", "adn" },
      begin = { "beign" },
      ["break"] = { "breka" },
      class = { "lcass", "calss" },
      defined = { "deifned", "defiend" },
      ["do"] = { "od" },
      ["else"] = { "lese", "esle" },
      elsif = { "lesif", "eslif", "elisf", "elsfi" },
      ["end"] = { "ned", "edn" },
      ensure = { "nesure", "esnure", "enusre", "ensrue" },
      ["false"] = { "flase", "fasle" },
      ["for"] = { "ofr", "fro" },
      ["if"] = { "fi" },
      module = { "mdoule", "moudle", "moduel" },
      next = { "enxt" },
      ["not"] = { "nto" },
      ["or"] = { "ro" },
      redo = { "reod" },
      rescue = { "resuce", "resceu" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      self = { "slef", "sefl" },
      super = { "usper", "suepr" },
      ["then"] = { "hten", "tehn", "thne" },
      ["true"] = { "ture", "treu" },
      undef = { "udnef" },
      unless = { "unelss" },
      ["until"] = { "utnil", "unitl" },
      when = { "hwen", "wehn", "whne" },
      ["while"] = { "hwile", "whiel" },
      yield = { "iyeld", "yeild", "yiled", "yiedl" },
    },
    java = {
      boolean = { "obolean", "booelan", "boolena" },
      ["break"] = { "breka" },
      catch = { "cathc" },
      char = { "hcar", "cahr" },
      class = { "lcass", "calss" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      default = { "defualt", "defautl" },
      ["do"] = { "od" },
      double = { "oduble", "dobule", "doulbe", "doubel" },
      ["else"] = { "lese", "esle" },
      enum = { "neum" },
      extends = { "extneds", "extedns" },
      final = { "ifnal", "fianl", "finla" },
      finally = { "ifnally", "fianlly", "finlaly", "finalyl" },
      float = { "lfoat", "flaot" },
      ["for"] = { "ofr", "fro" },
      ["goto"] = { "ogto", "gtoo", "goot" },
      ["if"] = { "fi" },
      implements = { "impelments", "implmeents", "impleemnts", "implemnets", "implemetns" },
      import = { "improt" },
      instanceof = { "isntanceof", "instnaceof", "instacneof", "instancoef", "instancefo" },
      int = { "itn" },
      interface = { "itnerface" },
      long = { "logn" },
      native = { "antive", "naitve", "natvie" },
      new = { "enw" },
      package = { "apckage", "pakcage", "pacakge" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      public = { "pbulic", "pulbic", "publci" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      short = { "hsort", "shrot" },
      static = { "staitc", "statci" },
      strictfp = { "stirctfp", "strcitfp", "strictpf" },
      super = { "usper", "suepr" },
      switch = { "siwtch", "swtich", "swithc" },
      synchronized = { "snychronized", "sycnhronized", "synhcronized", "syncrhonized", "synchornized", "synchroniezd" },
      this = { "htis", "thsi" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      throws = { "htrows", "trhows", "thorws", "thrwos" },
      transient = { "trnasient", "trasnient", "tranisent", "transeint", "transinet", "transietn" },
      void = { "ovid", "vodi" },
      volatile = { "ovlatile", "voaltile", "volaitle", "volatiel" },
      ["while"] = { "hwile", "whiel" },
    },
    rust = {
      Self = { "Slef", "Sefl" },
      ["break"] = { "breka" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      ["else"] = { "lese", "esle" },
      enum = { "neum" },
      extern = { "extenr" },
      ["false"] = { "flase", "fasle" },
      fn = { "nf" },
      ["for"] = { "ofr", "fro" },
      ["if"] = { "fi" },
      let = { "elt" },
      match = { "amtch", "mathc" },
      mod = { "mdo" },
      move = { "mvoe" },
      mut = { "mtu" },
      pub = { "pbu" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      self = { "slef", "sefl" },
      static = { "staitc", "statci" },
      struct = { "sturct", "strcut" },
      super = { "usper", "suepr" },
      trait = { "triat", "trati" },
      ["true"] = { "ture", "treu" },
      type = { "tpye", "tyep" },
      unsafe = { "usnafe" },
      use = { "sue" },
      where = { "hwere", "wehre" },
      ["while"] = { "hwile", "whiel" },
    },
    typescript = {
      any = { "nay", "ayn" },
      arguments = { "arugments", "arguemnts", "argumnets", "argumetns" },
      await = { "awiat", "awati" },
      bigint = { "ibgint", "bgiint", "biignt", "bigitn" },
      boolean = { "obolean", "booelan", "boolena" },
      ["break"] = { "breka" },
      catch = { "cathc" },
      class = { "lcass", "calss" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      debugger = { "deubgger", "debguger" },
      declare = { "delcare", "decalre" },
      delete = { "dleete", "deelte" },
      ["else"] = { "lese", "esle" },
      export = { "epxort", "exprot" },
      extends = { "extneds", "extedns" },
      ["false"] = { "flase", "fasle" },
      ["for"] = { "ofr", "fro" },
      ["function"] = { "ufnction", "fucntion", "funciton" },
      ["if"] = { "fi" },
      implements = { "impelments", "implmeents", "impleemnts", "implemnets", "implemetns" },
      import = { "improt" },
      instanceof = { "isntanceof", "instnaceof", "instacneof", "instancoef", "instancefo" },
      interface = { "itnerface" },
      keyof = { "ekyof", "keoyf", "keyfo" },
      let = { "elt" },
      module = { "mdoule", "moudle", "moduel" },
      namespace = { "anmespace", "nmaespace", "naemspace", "namepsace", "namesapce" },
      never = { "enver" },
      new = { "enw" },
      number = { "nubmer" },
      object = { "boject", "ojbect", "obejct" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      public = { "pbulic", "pulbic", "publci" },
      readonly = { "reaodnly", "readonyl" },
      require = { "reuqire", "requrie" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      static = { "staitc", "statci" },
      string = { "stirng", "strign" },
      super = { "usper", "suepr" },
      switch = { "siwtch", "swtich", "swithc" },
      symbol = { "smybol", "sybmol", "symobl" },
      this = { "htis", "thsi" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      ["true"] = { "ture", "treu" },
      type = { "tpye", "tyep" },
      typeof = { "tpyeof", "tyepof", "typoef", "typefo" },
      undefined = { "udnefined", "undeifned", "undefiend" },
      unique = { "unqiue", "uniuqe", "uniqeu" },
      unknown = { "unknwon", "unknonw" },
      void = { "ovid", "vodi" },
      ["while"] = { "hwile", "whiel" },
      yield = { "iyeld", "yeild", "yiled", "yiedl" },
    },
    javascript = {
      arguments = { "arugments", "arguemnts", "argumnets", "argumetns" },
      await = { "awiat", "awati" },
      ["break"] = { "breka" },
      catch = { "cathc" },
      class = { "lcass", "calss" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      debugger = { "deubgger", "debguger" },
      delete = { "dleete", "deelte" },
      ["else"] = { "lese", "esle" },
      export = { "epxort", "exprot" },
      extends = { "extneds", "extedns" },
      ["false"] = { "flase", "fasle" },
      ["for"] = { "ofr", "fro" },
      ["function"] = { "ufnction", "fucntion", "funciton" },
      ["if"] = { "fi" },
      import = { "improt" },
      instanceof = { "isntanceof", "instnaceof", "instacneof", "instancoef", "instancefo" },
      let = { "elt" },
      new = { "enw" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      public = { "pbulic", "pulbic", "publci" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      static = { "staitc", "statci" },
      super = { "usper", "suepr" },
      switch = { "siwtch", "swtich", "swithc" },
      this = { "htis", "thsi" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      ["true"] = { "ture", "treu" },
      typeof = { "tpyeof", "tyepof", "typoef", "typefo" },
      undefined = { "udnefined", "undeifned", "undefiend" },
      ["while"] = { "hwile", "whiel" },
      yield = { "iyeld", "yeild", "yiled", "yiedl" },
    },
    csharp = {
      alias = { "laias", "alais" },
      ascending = { "ascneding", "ascedning", "ascenidng", "ascendign" },
      async = { "asnyc", "asycn" },
      await = { "awiat", "awati" },
      descending = { "descneding", "descedning", "descenidng", "descendign" },
      dynamic = { "dnyamic", "dyanmic", "dynmaic", "dynamci" },
      equals = { "euqals", "eqauls", "equlas", "equasl" },
      from = { "form" },
      global = { "lgobal", "glboal", "globla" },
      group = { "gorup" },
      into = { "itno", "inot" },
      let = { "elt" },
      nameof = { "anmeof", "nmaeof", "naemof", "namoef", "namefo" },
      orderby = { "roderby" },
      partial = { "aprtial", "parital", "partail", "partila" },
      remove = { "rmeove", "remvoe" },
      select = { "sleect", "seelct" },
      value = { "vlaue", "valeu" },
      when = { "hwen", "wehn", "whne" },
      where = { "hwere", "wehre" },
      yield = { "iyeld", "yeild", "yiled", "yiedl" },
    },
    haskell = {
      class = { "lcass", "calss" },
      deriving = { "deirving", "derviing", "deriivng", "derivign" },
      ["do"] = { "od" },
      ["else"] = { "lese", "esle" },
      ["if"] = { "fi" },
      import = { "improt" },
      infix = { "ifnix", "inifx", "infxi" },
      infixl = { "ifnixl", "inifxl", "infxil", "infilx" },
      infixr = { "ifnixr", "inifxr", "infxir" },
      instance = { "isntance", "instnace", "instacne" },
      let = { "elt" },
      module = { "mdoule", "moudle", "moduel" },
      newtype = { "enwtype", "newtpye", "newtyep" },
      of = { "fo" },
      ["then"] = { "hten", "tehn", "thne" },
      type = { "tpye", "tyep" },
      where = { "hwere", "wehre" },
    },
    kotlin = {
      ["break"] = { "breka" },
      catch = { "cathc" },
      class = { "lcass", "calss" },
      constructor = { "ocnstructor", "cosntructor", "consturctor", "constrcutor", "construcotr", "constructro" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      delegate = { "dleegate", "deelgate" },
      ["do"] = { "od" },
      dynamic = { "dnyamic", "dyanmic", "dynmaic", "dynamci" },
      ["else"] = { "lese", "esle" },
      ["false"] = { "flase", "fasle" },
      field = { "ifeld", "feild", "filed", "fiedl" },
      file = { "ifle", "fiel" },
      finally = { "ifnally", "fianlly", "finlaly", "finalyl" },
      ["for"] = { "ofr", "fro" },
      fun = { "ufn" },
      ["if"] = { "fi" },
      import = { "improt" },
      init = { "inti" },
      interface = { "itnerface" },
      is = { "si" },
      object = { "boject", "ojbect", "obejct" },
      package = { "apckage", "pakcage", "pacakge" },
      param = { "apram", "parma" },
      property = { "rpoperty", "porperty", "proeprty" },
      receiver = { "reciever", "recevier" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      setparam = { "septaram", "setapram", "setparma" },
      super = { "usper", "suepr" },
      this = { "htis", "thsi" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      ["true"] = { "ture", "treu" },
      typealias = { "tpyealias", "tyepalias", "typelaias", "typealais" },
      val = { "vla" },
      when = { "hwen", "wehn", "whne" },
      where = { "hwere", "wehre" },
      ["while"] = { "hwile", "whiel" },
    },
    php = {
      ["and"] = { "nad", "adn" },
      ["break"] = { "breka" },
      callable = { "clalable", "calalble", "callalbe", "callabel" },
      catch = { "cathc" },
      class = { "lcass", "calss" },
      clone = { "lcone", "cloen" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      declare = { "delcare", "decalre" },
      default = { "defualt", "defautl" },
      die = { "ide", "dei" },
      ["do"] = { "od" },
      echo = { "ehco" },
      ["else"] = { "lese", "esle" },
      ["elseif"] = { "leseif", "esleif", "elsief", "elsefi" },
      empty = { "mepty", "emtpy" },
      enddeclare = { "neddeclare", "edndeclare", "enddelcare", "enddecalre" },
      endfor = { "nedfor", "ednfor", "endofr", "endfro" },
      endforeach = { "nedforeach", "ednforeach", "endofreach", "endfroeach", "endforeahc" },
      endif = { "nedif", "ednif", "enidf", "endfi" },
      endswitch = { "nedswitch", "ednswitch", "endsiwtch", "endswtich", "endswithc" },
      endwhile = { "nedwhile", "ednwhile", "endhwile", "endwhiel" },
      eval = { "evla" },
      exit = { "eixt", "exti" },
      extends = { "extneds", "extedns" },
      final = { "ifnal", "fianl", "finla" },
      finally = { "ifnally", "fianlly", "finlaly", "finalyl" },
      ["for"] = { "ofr", "fro" },
      foreach = { "ofreach", "froeach", "foreahc" },
      ["function"] = { "ufnction", "fucntion", "funciton" },
      global = { "lgobal", "glboal", "globla" },
      ["goto"] = { "ogto", "gtoo", "goot" },
      ["if"] = { "fi" },
      implements = { "impelments", "implmeents", "impleemnts", "implemnets", "implemetns" },
      include = { "icnlude", "inlcude", "incldue" },
      include_once = { "icnlude_once", "inlcude_once", "incldue_once", "include_ocne" },
      instanceof = { "isntanceof", "instnaceof", "instacneof", "instancoef", "instancefo" },
      insteadof = { "isnteadof", "insteaodf", "insteadfo" },
      interface = { "itnerface" },
      isset = { "siset" },
      list = { "lsit" },
      namespace = { "anmespace", "nmaespace", "naemspace", "namepsace", "namesapce" },
      new = { "enw" },
      ["or"] = { "ro" },
      print = { "rpint", "pirnt", "pritn" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      public = { "pbulic", "pulbic", "publci" },
      require = { "reuqire", "requrie" },
      require_once = { "reuqire_once", "requrie_once", "require_ocne" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      static = { "staitc", "statci" },
      switch = { "siwtch", "swtich", "swithc" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      trait = { "triat", "trati" },
      unset = { "usnet" },
      use = { "sue" },
      ["while"] = { "hwile", "whiel" },
      xor = { "oxr", "xro" },
      yield = { "iyeld", "yeild", "yiled", "yiedl" },
    },
    scala = {
      catch = { "cathc" },
      class = { "lcass", "calss" },
      ["do"] = { "od" },
      ["else"] = { "lese", "esle" },
      extends = { "extneds", "extedns" },
      ["false"] = { "flase", "fasle" },
      final = { "ifnal", "fianl", "finla" },
      finally = { "ifnally", "fianlly", "finlaly", "finalyl" },
      ["for"] = { "ofr", "fro" },
      forSome = { "ofrSome", "froSome", "forSoem" },
      ["if"] = { "fi" },
      implicit = { "implciit", "impliict", "implicti" },
      import = { "improt" },
      lazy = { "alzy", "lzay", "layz" },
      match = { "amtch", "mathc" },
      new = { "enw" },
      object = { "boject", "ojbect", "obejct" },
      override = { "voerride", "overirde", "overrdie" },
      package = { "apckage", "pakcage", "pacakge" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      sealed = { "selaed", "seaeld" },
      super = { "usper", "suepr" },
      this = { "htis", "thsi" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      trait = { "triat", "trati" },
      ["true"] = { "ture", "treu" },
      type = { "tpye", "tyep" },
      val = { "vla" },
      ["while"] = { "hwile", "whiel" },
      with = { "iwth", "wtih", "wiht" },
      yield = { "iyeld", "yeild", "yiled", "yiedl" },
    },
    swift = {
      Any = { "Ayn" },
      Self = { "Slef", "Sefl" },
      associatedtype = {
        "asosciatedtype",
        "asscoiatedtype",
        "assoicatedtype",
        "assocaitedtype",
        "associatedtpye",
        "associatedtyep",
      },
      ["break"] = { "breka" },
      catch = { "cathc" },
      class = { "lcass", "calss" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      default = { "defualt", "defautl" },
      deinit = { "dienit", "deinti" },
      ["do"] = { "od" },
      ["else"] = { "lese", "esle" },
      enum = { "neum" },
      extension = { "extnesion", "extesnion", "extenison" },
      fallthrough = {
        "flalthrough",
        "faltlhrough",
        "fallhtrough",
        "falltrhough",
        "fallthorugh",
        "fallthroguh",
        "fallthrouhg",
      },
      ["false"] = { "flase", "fasle" },
      fileprivate = { "ifleprivate", "fielprivate", "filperivate", "filerpivate", "filepirvate", "fileprviate" },
      ["for"] = { "ofr", "fro" },
      func = { "ufnc", "fucn" },
      guard = { "ugard", "gaurd" },
      ["if"] = { "fi" },
      import = { "improt" },
      init = { "inti" },
      inout = { "inotu" },
      internal = { "itnernal", "intenral", "interanl", "internla" },
      is = { "si" },
      let = { "elt" },
      open = { "oepn", "opne" },
      operator = { "oeprator", "operaotr", "operatro" },
      private = { "rpivate", "pirvate", "prviate" },
      protocol = { "rpotocol", "portocol", "prtoocol", "prootcol", "protcool", "protoocl" },
      public = { "pbulic", "pulbic", "publci" },
      ["repeat"] = { "rpeeat", "reepat" },
      rethrows = { "rehtrows", "retrhows", "rethorws", "rethrwos" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      self = { "slef", "sefl" },
      static = { "staitc", "statci" },
      struct = { "sturct", "strcut" },
      subscript = { "usbscript", "sbuscript", "subscirpt", "subscritp" },
      super = { "usper", "suepr" },
      switch = { "siwtch", "swtich", "swithc" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      throws = { "htrows", "trhows", "thorws", "thrwos" },
      ["true"] = { "ture", "treu" },
      typealias = { "tpyealias", "tyepalias", "typelaias", "typealais" },
      where = { "hwere", "wehre" },
      ["while"] = { "hwile", "whiel" },
    },
    c = {
      auto = { "uato", "atuo", "auot" },
      ["break"] = { "breka" },
      char = { "hcar", "cahr" },
      const = { "ocnst", "cosnt" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      default = { "defualt", "defautl" },
      ["do"] = { "od" },
      double = { "oduble", "dobule", "doulbe", "doubel" },
      ["else"] = { "lese", "esle" },
      enum = { "neum" },
      extern = { "extenr" },
      float = { "lfoat", "flaot" },
      ["for"] = { "ofr", "fro" },
      ["goto"] = { "ogto", "gtoo", "goot" },
      ["if"] = { "fi" },
      int = { "itn" },
      long = { "logn" },
      register = { "reigster", "regsiter" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      short = { "hsort", "shrot" },
      signed = { "isgned", "sgined", "singed", "sigend" },
      sizeof = { "iszeof", "siezof", "sizoef", "sizefo" },
      static = { "staitc", "statci" },
      struct = { "sturct", "strcut" },
      switch = { "siwtch", "swtich", "swithc" },
      typedef = { "tpyedef", "tyepdef" },
      unsigned = { "usnigned", "unisgned", "unsgined", "unsinged", "unsigend" },
      void = { "ovid", "vodi" },
      volatile = { "ovlatile", "voaltile", "volaitle", "volatiel" },
      ["while"] = { "hwile", "whiel" },
    },
    html = {
      article = { "aritcle", "artcile", "artilce", "articel" },
      aside = { "aisde", "asdie" },
      audio = { "uadio", "aduio", "auido" },
      bdi = { "bid" },
      bdo = { "bod" },
      blockquote = { "lbockquote", "blcokquote", "blokcquote", "blocqkuote", "blockuqote", "blockqutoe" },
      body = { "obdy", "bdoy" },
      button = { "ubtton", "btuton", "butotn" },
      canvas = { "cnavas", "cavnas" },
      caption = { "cpation", "catpion", "capiton" },
      cite = { "icte", "ctie" },
      code = { "ocde", "cdoe" },
      col = { "ocl" },
      colgroup = { "oclgroup", "coglroup", "colgorup" },
      datalist = { "datlaist", "datalsit" },
      del = { "dle" },
      details = { "detials", "detaisl" },
      dfn = { "dnf" },
      dialog = { "idalog", "dailog", "dilaog", "dialgo" },
      div = { "idv", "dvi" },
      dl = { "ld" },
      em = { "me" },
      embed = { "mebed", "ebmed" },
      fieldset = { "ifeldset", "feildset", "filedset", "fiedlset" },
      figcaption = { "ifgcaption", "fgicaption", "figcpation", "figcatpion", "figcapiton" },
      figure = { "ifgure", "fgiure", "fiugre", "figrue" },
      footer = { "ofoter", "fotoer" },
      form = { "ofrm", "from", "fomr" },
      head = { "ehad" },
      header = { "ehader" },
      hgroup = { "ghroup", "hgorup" },
      hr = { "rh" },
      html = { "thml", "hmtl" },
      iframe = { "firame", "ifrmae", "ifraem" },
      img = { "igm" },
      input = { "inptu" },
      ins = { "isn" },
      kbd = { "bkd" },
      keygen = { "ekygen", "keygne" },
      label = { "albel", "lable" },
      legend = { "elgend", "legned", "legedn" },
      main = { "amin", "mian" },
      map = { "amp", "mpa" },
      mark = { "amrk", "makr" },
      menu = { "emnu", "mneu" },
      menuitem = { "emnuitem", "mneuitem", "menutiem", "menuitme" },
      meta = { "emta" },
      meter = { "emter" },
      nav = { "anv" },
      noscript = { "nsocript", "noscirpt", "noscritp" },
      object = { "boject", "ojbect", "obejct" },
      optgroup = { "otpgroup", "optgorup" },
      option = { "otpion", "opiton" },
      output = { "otuput", "ouptut", "outptu" },
      param = { "apram", "parma" },
      picture = { "pciture", "picutre", "pictrue" },
      pre = { "rpe" },
      progress = { "rpogress", "porgress", "prgoress" },
      rp = { "pr" },
      ruby = { "urby", "rbuy" },
      samp = { "smap" },
      script = { "scirpt", "scritp" },
      section = { "seciton" },
      select = { "sleect", "seelct" },
      small = { "msall", "samll", "smlal" },
      source = { "osurce", "soruce" },
      span = { "psan", "sapn", "spna" },
      strong = { "storng", "strogn" },
      style = { "stlye", "styel" },
      sub = { "usb", "sbu" },
      summary = { "usmmary", "sumamry" },
      sup = { "usp" },
      table = { "talbe", "tabel" },
      tbody = { "tobdy", "tbdoy" },
      template = { "tmeplate", "tempalte" },
      tfoot = { "tofot", "tfoto" },
      th = { "ht" },
      thead = { "htead", "tehad" },
      time = { "itme", "tiem" },
      title = { "ittle", "ttile", "tilte", "titel" },
      track = { "trakc" },
      video = { "ivdeo", "vdieo", "vidoe" },
    },
    python = {
      False = { "Flase", "Fasle" },
      None = { "Noen" },
      True = { "Ture", "Treu" },
      ["and"] = { "nad", "adn" },
      async = { "asnyc", "asycn" },
      await = { "awiat", "awati" },
      ["break"] = { "breka" },
      class = { "lcass", "calss" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      del = { "dle" },
      elif = { "leif", "elfi" },
      ["else"] = { "lese", "esle" },
      except = { "excpet", "excetp" },
      finally = { "ifnally", "fianlly", "finlaly", "finalyl" },
      ["for"] = { "ofr", "fro" },
      from = { "form" },
      global = { "lgobal", "glboal", "globla" },
      ["if"] = { "fi" },
      import = { "improt" },
      is = { "si" },
      lambda = { "almbda", "lmabda", "labmda" },
      nonlocal = { "nonlcoal", "nonlocla" },
      ["not"] = { "nto" },
      ["or"] = { "ro" },
      pass = { "apss" },
      raise = { "riase", "rasie" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      ["while"] = { "hwile", "whiel" },
      with = { "iwth", "wtih", "wiht" },
      yield = { "iyeld", "yeild", "yiled", "yiedl" },
    },
    cpp = {
      alignas = { "laignas", "alginas", "alingas", "aligans" },
      alignof = { "laignof", "alginof", "alingof", "alignfo" },
      ["and"] = { "nad", "adn" },
      and_eq = { "nad_eq", "adn_eq" },
      asm = { "ams" },
      atomic_cancel = { "aotmic_cancel", "atomci_cancel", "atomic_cnacel", "atomic_cacnel", "atomic_cancle" },
      atomic_commit = { "aotmic_commit", "atomci_commit", "atomic_ocmmit", "atomic_commti" },
      atomic_noexcept = {
        "aotmic_noexcept",
        "atomci_noexcept",
        "atomic_neoxcept",
        "atomic_noexcpet",
        "atomic_noexcetp",
      },
      auto = { "uato", "atuo", "auot" },
      bitand = { "ibtand", "btiand", "bitnad", "bitadn" },
      bitor = { "ibtor", "btior", "biotr", "bitro" },
      bool = { "obol" },
      ["break"] = { "breka" },
      catch = { "cathc" },
      char = { "hcar", "cahr" },
      char16_t = { "hcar16_t", "cahr16_t" },
      char32_t = { "hcar32_t", "cahr32_t" },
      char8_t = { "hcar8_t", "cahr8_t" },
      class = { "lcass", "calss" },
      co_await = { "oc_await", "co_awiat", "co_awati" },
      co_return = { "oc_return", "co_reutrn", "co_retrun", "co_retunr" },
      co_yield = { "oc_yield", "co_iyeld", "co_yeild", "co_yiled", "co_yiedl" },
      compl = { "ocmpl" },
      concept = { "ocncept", "cocnept", "concpet", "concetp" },
      const = { "ocnst", "cosnt" },
      const_cast = { "ocnst_cast", "cosnt_cast" },
      consteval = { "ocnsteval", "cosnteval", "constevla" },
      constexpr = { "ocnstexpr", "cosntexpr", "constepxr", "constexrp" },
      constinit = { "ocnstinit", "cosntinit", "consitnit", "constinti" },
      continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
      decltype = { "delctype", "dectlype", "decltpye", "decltyep" },
      default = { "defualt", "defautl" },
      delete = { "dleete", "deelte" },
      ["do"] = { "od" },
      double = { "oduble", "dobule", "doulbe", "doubel" },
      dynamic_cast = { "dnyamic_cast", "dyanmic_cast", "dynmaic_cast", "dynamci_cast" },
      ["else"] = { "lese", "esle" },
      enum = { "neum" },
      explicit = { "epxlicit", "explciit", "expliict", "explicti" },
      export = { "epxort", "exprot" },
      extern = { "extenr" },
      ["false"] = { "flase", "fasle" },
      float = { "lfoat", "flaot" },
      ["for"] = { "ofr", "fro" },
      friend = { "firend", "freind", "frined", "friedn" },
      ["goto"] = { "ogto", "gtoo", "goot" },
      ["if"] = { "fi" },
      inline = { "inlien" },
      int = { "itn" },
      long = { "logn" },
      mutable = { "mtuable", "mutalbe", "mutabel" },
      namespace = { "anmespace", "nmaespace", "naemspace", "namepsace", "namesapce" },
      new = { "enw" },
      noexcept = { "neoxcept", "noexcpet", "noexcetp" },
      ["not"] = { "nto" },
      not_eq = { "nto_eq" },
      nullptr = { "nulltpr" },
      operator = { "oeprator", "operaotr", "operatro" },
      ["or"] = { "ro" },
      or_eq = { "ro_eq" },
      private = { "rpivate", "pirvate", "prviate" },
      protected = { "rpotected", "portected", "prtoected" },
      public = { "pbulic", "pulbic", "publci" },
      register = { "reigster", "regsiter" },
      reinterpret_cast = { "rienterpret_cast", "reitnerpret_cast", "reinteprret_cast", "reinterrpet_cast" },
      requires = { "reuqires", "requries" },
      ["return"] = { "reutrn", "retrun", "retunr" },
      short = { "hsort", "shrot" },
      signed = { "isgned", "sgined", "singed", "sigend" },
      sizeof = { "iszeof", "siezof", "sizoef", "sizefo" },
      static = { "staitc", "statci" },
      static_assert = { "staitc_assert", "statci_assert" },
      static_cast = { "staitc_cast", "statci_cast" },
      struct = { "sturct", "strcut" },
      switch = { "siwtch", "swtich", "swithc" },
      synchronized = { "snychronized", "sycnhronized", "synhcronized", "syncrhonized", "synchornized", "synchroniezd" },
      template = { "tmeplate", "tempalte" },
      this = { "htis", "thsi" },
      thread_local = { "htread_local", "trhead_local", "thread_lcoal", "thread_locla" },
      throw = { "htrow", "trhow", "thorw", "thrwo" },
      ["true"] = { "ture", "treu" },
      typedef = { "tpyedef", "tyepdef" },
      typeid = { "tpyeid", "tyepid", "typied", "typedi" },
      typename = { "tpyename", "tyepname", "typneame", "typeanme", "typenmae", "typenaem" },
      unsigned = { "usnigned", "unisgned", "unsgined", "unsinged", "unsigend" },
      using = { "suing", "uisng", "usign" },
      virtual = { "ivrtual", "vritual", "virutal", "virtaul", "virtula" },
      void = { "ovid", "vodi" },
      volatile = { "ovlatile", "voaltile", "volaitle", "volatiel" },
      wchar_t = { "whcar_t", "wcahr_t" },
      ["while"] = { "hwile", "whiel" },
      xor = { "oxr", "xro" },
      xor_eq = { "oxr_eq", "xro_eq" },
    },
  },
}
