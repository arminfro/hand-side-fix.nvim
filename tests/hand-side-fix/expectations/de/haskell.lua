return {
  class = { "lcass", "calss" },
  deriving = { "deirving", "derviing", "deriivng", "derivign" },
  ["do"] = { "od" },
  ["else"] = { "lese", "esle" },
  ["if"] = { "fi" },
  import = { "improt" },
  infix = { "ifnix", "inifx", "infxi" },
  infixl = { "ifnixl", "inifxl", "infxil", "infilx" },
  infixr = { "ifnixr", "inifxr", "infxir" },
  instance = { "isntance", "instnace", "instacne" },
  let = { "elt" },
  module = { "mdoule", "moudle", "moduel" },
  newtype = { "enwtype", "newtpye", "newtyep" },
  of = { "fo" },
  ["then"] = { "hten", "tehn", "thne" },
  type = { "tpye", "tyep" },
  where = { "hwere", "wehre" },
}
