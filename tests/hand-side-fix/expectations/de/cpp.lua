return {
  alignas = { "laignas", "alginas", "alingas", "aligans" },
  alignof = { "laignof", "alginof", "alingof", "alignfo" },
  ["and"] = { "nad", "adn" },
  and_eq = { "nad_eq", "adn_eq" },
  asm = { "ams" },
  atomic_cancel = { "aotmic_cancel", "atomci_cancel", "atomic_cnacel", "atomic_cacnel", "atomic_cancle" },
  atomic_commit = { "aotmic_commit", "atomci_commit", "atomic_ocmmit", "atomic_commti" },
  atomic_noexcept = {
    "aotmic_noexcept",
    "atomci_noexcept",
    "atomic_neoxcept",
    "atomic_noexcpet",
    "atomic_noexcetp",
  },
  auto = { "uato", "atuo", "auot" },
  bitand = { "ibtand", "btiand", "bitnad", "bitadn" },
  bitor = { "ibtor", "btior", "biotr", "bitro" },
  bool = { "obol" },
  ["break"] = { "breka" },
  catch = { "cathc" },
  char = { "hcar", "cahr" },
  char16_t = { "hcar16_t", "cahr16_t" },
  char32_t = { "hcar32_t", "cahr32_t" },
  char8_t = { "hcar8_t", "cahr8_t" },
  class = { "lcass", "calss" },
  co_await = { "oc_await", "co_awiat", "co_awati" },
  co_return = { "oc_return", "co_reutrn", "co_retrun", "co_retunr" },
  co_yield = { "oc_yield", "co_iyeld", "co_yeild", "co_yiled", "co_yiedl" },
  compl = { "ocmpl" },
  concept = { "ocncept", "cocnept", "concpet", "concetp" },
  const = { "ocnst", "cosnt" },
  const_cast = { "ocnst_cast", "cosnt_cast" },
  consteval = { "ocnsteval", "cosnteval", "constevla" },
  constexpr = { "ocnstexpr", "cosntexpr", "constepxr", "constexrp" },
  constinit = { "ocnstinit", "cosntinit", "consitnit", "constinti" },
  continue = { "ocntinue", "cotninue", "conitnue", "contineu" },
  decltype = { "delctype", "dectlype", "decltpye", "decltyep" },
  default = { "defualt", "defautl" },
  delete = { "dleete", "deelte" },
  ["do"] = { "od" },
  double = { "oduble", "dobule", "doulbe", "doubel" },
  dynamic_cast = { "dnyamic_cast", "dyanmic_cast", "dynmaic_cast", "dynamci_cast" },
  ["else"] = { "lese", "esle" },
  enum = { "neum" },
  explicit = { "epxlicit", "explciit", "expliict", "explicti" },
  export = { "epxort", "exprot" },
  extern = { "extenr" },
  ["false"] = { "flase", "fasle" },
  float = { "lfoat", "flaot" },
  ["for"] = { "ofr", "fro" },
  friend = { "firend", "freind", "frined", "friedn" },
  ["goto"] = { "ogto", "gtoo", "goot" },
  ["if"] = { "fi" },
  inline = { "inlien" },
  int = { "itn" },
  long = { "logn" },
  mutable = { "mtuable", "mutalbe", "mutabel" },
  namespace = { "anmespace", "nmaespace", "naemspace", "namepsace", "namesapce" },
  new = { "enw" },
  noexcept = { "neoxcept", "noexcpet", "noexcetp" },
  ["not"] = { "nto" },
  not_eq = { "nto_eq" },
  nullptr = { "nulltpr" },
  operator = { "oeprator", "operaotr", "operatro" },
  ["or"] = { "ro" },
  or_eq = { "ro_eq" },
  private = { "rpivate", "pirvate", "prviate" },
  protected = { "rpotected", "portected", "prtoected" },
  public = { "pbulic", "pulbic", "publci" },
  register = { "reigster", "regsiter" },
  reinterpret_cast = { "rienterpret_cast", "reitnerpret_cast", "reinteprret_cast", "reinterrpet_cast" },
  requires = { "reuqires", "requries" },
  ["return"] = { "reutrn", "retrun", "retunr" },
  short = { "hsort", "shrot" },
  signed = { "isgned", "sgined", "singed", "sigend" },
  sizeof = { "iszeof", "siezof", "sizoef", "sizefo" },
  static = { "staitc", "statci" },
  static_assert = { "staitc_assert", "statci_assert" },
  static_cast = { "staitc_cast", "statci_cast" },
  struct = { "sturct", "strcut" },
  switch = { "siwtch", "swtich", "swithc" },
  synchronized = { "snychronized", "sycnhronized", "synhcronized", "syncrhonized", "synchornized", "synchroniezd" },
  template = { "tmeplate", "tempalte" },
  this = { "htis", "thsi" },
  thread_local = { "htread_local", "trhead_local", "thread_lcoal", "thread_locla" },
  throw = { "htrow", "trhow", "thorw", "thrwo" },
  ["true"] = { "ture", "treu" },
  typedef = { "tpyedef", "tyepdef" },
  typeid = { "tpyeid", "tyepid", "typied", "typedi" },
  typename = { "tpyename", "tyepname", "typneame", "typeanme", "typenmae", "typenaem" },
  unsigned = { "usnigned", "unisgned", "unsgined", "unsinged", "unsigend" },
  using = { "suing", "uisng", "usign" },
  virtual = { "ivrtual", "vritual", "virutal", "virtaul", "virtula" },
  void = { "ovid", "vodi" },
  volatile = { "ovlatile", "voaltile", "volaitle", "volatiel" },
  wchar_t = { "whcar_t", "wcahr_t" },
  ["while"] = { "hwile", "whiel" },
  xor = { "oxr", "xro" },
  xor_eq = { "oxr_eq", "xro_eq" },
}
